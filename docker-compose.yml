services:
  frontend:
    build:
      context: ./frontend
      target: production
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network
    restart: always

  backend:
    build: ./backend
    ports:
      - "5000:5000"
    volumes:
      - ./data:/app/data
    env_file:
      - .env
    environment:
      - WS_URL=wss://ws-feed.exchange.coinbase.com
      - USE_ALL_USD_PAIRS=true
      - VOLUME_THRESHOLD=${VOLUME_THRESHOLD:-1.5}
      - WINDOW_MINUTES=${WINDOW_MINUTES:-5}
      - EMIT_RAW_TRADES=${EMIT_RAW_TRADES:-false}
    networks:
      - app-network
    restart: always

  spike-detector:
    build:
      context: ./bots/spike-detector
      dockerfile: Dockerfile
    depends_on:
      - backend
    volumes:
      - ./data:/app/data
    env_file:
      - .env
    environment:
      - BACKEND_URL=http://backend:5000
      - PRICE_SPIKE_THRESHOLD=${PRICE_SPIKE_THRESHOLD:-5.0}
      - PRICE_WINDOW_MINUTES=${PRICE_WINDOW_MINUTES:-5}
      - WEBHOOK_URL=${WEBHOOK_URL:-}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - DB_PATH=/app/data/spike_alerts.db
    networks:
      - app-network
    restart: unless-stopped

  # ADD THIS NEW SERVICE HERE ðŸ‘‡
  telegram-bot:
    build:
      context: ./bots/telegram
      dockerfile: Dockerfile
    depends_on:
      - backend
    env_file:
      - .env
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - ALERTS_CHANNEL_ID=${ALERTS_CHANNEL_ID:-}
      - BACKEND_URL=http://backend:5000
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    networks:
      - app-network
    restart: unless-stopped

  trading-bot:
    build: ./bots/trading
    env_file:
      - .env
    networks:
      - app-network
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  data:
